name: Check build

on:
  pull_request:
  schedule:
    - cron:  0 20 * * *

jobs:
  tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        build_type: [release, debug, coverage]
        exclude:
          - os: macOS-latest
            build_type: coverage

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v1

    - name: Install gcovr (Ubuntu)
      if: contains(matrix.os, 'ubuntu') && matrix.build_type == 'coverage'
      run: |
        sudo apt update
        sudo apt install --no-install-recommends gcovr

    - name: Install gcovr (macOS)
      if: contains(matrix.os, 'macOS') && matrix.build_type == 'coverage'
      run: |
        brew install gcovr

    - name: Install googletest
      run: |
        git clone https://github.com/google/googletest.git
        cd googletest
        cmake -DBUILD_GMOCK=OFF .
        sudo make -k -j all install

    - name: Build tests
      run: |
        make BUILD_TYPE=${{ matrix.build_type }} -k -j build-test

    - name: Run tests
      if: matrix.build_type != 'coverage'
      run: |
        make BUILD_TYPE=${{ matrix.build_type }} -k -j run-test

    - name: Generate coverage report
      if: matrix.build_type == 'coverage'
      run: |
        make BUILD_TYPE=coverage -k -j coverage

    - name: Upload coverage report
      if: matrix.build_type == 'coverage'
      uses: actions/upload-artifact@v1
      with:
        name: coverage_html
        path: out/coverage_report

  cpplint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Install cpplint.py
      run: |
        git clone https://github.com/google/styleguide.git

    - name: cpplint
      run: |
        make CPPLINT=styleguide/cpplint/cpplint.py -k -j cpplint

  cppcheck:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Install cppcheck
      run: |
        sudo apt update
        sudo apt install --no-install-recommends cppcheck

    - name: cppcheck
      run: |
        make -k -j cppcheck

  doc:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Install graphviz and doxygen
      run: |
        sudo apt update
        sudo apt install --no-install-recommends graphviz doxygen

    - name: Make doc
      run: |
        make -k -j doc

    - name: Upload doc
      uses: actions/upload-artifact@v1
      with:
        name: doc
        path: out/doc/html
